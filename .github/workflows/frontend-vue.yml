

name: CI/CD Frontend Vue

on:
  push:
    branches:
    # - master
    - feature/cicd

env:
  DOC_HUB_USER: ${{ secrets.DOC_HUB_USER }}
  DOC_HUB_PASS: ${{ secrets.DOC_HUB_PASS }}

jobs:
  build_tet:
    name: Build for Test
    runs-on: ubuntu-latest
    steps:
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    # -
    #   name: Login to GitHub Container Registry
    #   uses: actions/checkout@v2
    #   with:
    #     registry: docker.io
    #     username: $DOC_HUB_USER
    #     password: $DOC_HUB_PASS
    -
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with: 
        context: store-web-vue
        file: store-web-vue/Dockerfile.dev
        push: false
        tags: tokdev/shopping-cart-1/store-web-vue:dev0.0.1
        # cache-from: type=registry,ref=tokdev/shopping-cart-1/store-web-vue:dev0.0.1
        # cache-from: type=local,src=store-web-vue/node_modules
        # cache-to: type=local,dest=store-web-vue/node_modules
        cache-to: type=local,dest=/tmp/.buildx-cache
        

  # analysis:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: my-artifact
  #       path: ${PWD}/store-web-vue/node_modules
  #   - name: code analysis
  #     run: make code_analysis_frontend_vue

  
  # unittest:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: my-artifact
  #       path: ${PWD}/store-web-vue/node_modules
  #   - name: unittest
  #     run: make run_unittest_frontend_vue
